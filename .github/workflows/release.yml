name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary-suffix: ""
            archive-suffix: "linux-x64.tar.gz"
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            binary-suffix: ""
            archive-suffix: "linux-x64-musl.tar.gz"
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary-suffix: ".exe"
            archive-suffix: "windows-x64.zip"
          - os: macos-latest
            target: x86_64-apple-darwin
            binary-suffix: ""
            archive-suffix: "macos-x64.tar.gz"
          - os: macos-latest
            target: aarch64-apple-darwin
            binary-suffix: ""
            archive-suffix: "macos-arm64.tar.gz"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install musl tools (Linux musl only)
      if: matrix.target == 'x86_64-unknown-linux-musl'
      run: sudo apt-get update && sudo apt-get install -y musl-tools

    - name: Cache Cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-${{ matrix.target }}-
          ${{ runner.os }}-cargo-

    - name: Build binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Strip binary (Unix)
      if: matrix.os != 'windows-latest'
      run: strip target/${{ matrix.target }}/release/file_scanner${{ matrix.binary-suffix }}

    - name: Create archive directory
      run: mkdir -p dist

    - name: Create archive (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        cp target/${{ matrix.target }}/release/file_scanner${{ matrix.binary-suffix }} dist/
        cp scanner-config.toml dist/
        cp README.md dist/
        cp LICENSE dist/
        tar -czf file-scanner-${{ matrix.archive-suffix }} -C dist .

    - name: Create archive (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        copy target\${{ matrix.target }}\release\file_scanner${{ matrix.binary-suffix }} dist\
        copy scanner-config.toml dist\
        copy README.md dist\
        copy LICENSE dist\
        7z a file-scanner-${{ matrix.archive-suffix }} .\dist\*

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: file-scanner-${{ matrix.archive-suffix }}
        path: file-scanner-${{ matrix.archive-suffix }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Generate release notes
      id: release_notes
      run: |
        cat > release_notes.md << 'EOF'
        # Data Discovery Tool v${{ github.ref_name }}
        
        ## 🎯 Features
        
        ### Smart Data Discovery
        - Identifies data files based on extensions and MIME types
        - Extracts comprehensive metadata (size, permissions, modification time, SHA256 hash)
        - Captures file samples for content analysis
        - Generates structured NDJSON output for easy processing
        
        ### 🔒 Security-First Design
        - **Comprehensive security exclusions** to prevent scanning sensitive files
        - Blocks SSH keys, browser cookies, password managers, credential stores
        - Compatible with enterprise security software (tested with CrowdStrike Falcon)
        - Respects `.gitignore` and similar ignore files
        
        ### ⚡ Performance Optimised
        - Configurable file size limits (100MB default)
        - Optional hash calculation for large files (1GB+ skipped by default)
        - Parallel processing with intelligent filtering
        - Minimal system impact with configurable throttling
        
        ### 🌐 Cross-Platform Support
        - Pre-configured exclusions for macOS and Windows system files
        - Universal filtering for development artifacts and cache directories
        - Platform-specific security directory handling
        
        ### 📤 Upload Ready
        - HTTP endpoint support (REST APIs, webhooks)
        - AWS S3 presigned URL compatibility
        - Configurable authentication headers
        - Batch upload capabilities
        
        ## 📦 Available Downloads
        
        | Platform | Architecture | Download |
        |----------|-------------|----------|
        | Linux | x64 | file-scanner-linux-x64.tar.gz |
        | Linux | x64 (musl) | file-scanner-linux-x64-musl.tar.gz |
        | macOS | x64 (Intel) | file-scanner-macos-x64.tar.gz |
        | macOS | ARM64 (Apple Silicon) | file-scanner-macos-arm64.tar.gz |
        | Windows | x64 | file-scanner-windows-x64.zip |
        
        ## 🚀 Quick Start
        
        1. Download the appropriate binary for your platform
        2. Extract the archive
        3. Run `./file_scanner --help` to see available options
        4. First run creates a default configuration file
        5. Customise `scanner-config.toml` as needed
        
        ## ⚠️ Security Notice
        
        This tool includes comprehensive security exclusions to prevent scanning sensitive files such as:
        - SSH private keys and certificates
        - Browser saved passwords and cookies
        - Password manager databases
        - OS credential stores
        - Cloud provider authentication files
        - VPN configurations
        
        **These exclusions are critical for enterprise environments and should not be modified without understanding the security implications.**
        
        ## 🔗 Documentation
        
        For detailed configuration options, use cases, and examples, see the [README.md](https://github.com/ciaran-finnegan/file-scanner/blob/main/README.md).
        
        ---
        
        Built with ❤️ for secure data discovery and classification pipelines.
        EOF

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        body_path: release_notes.md
        files: artifacts/**/file-scanner-*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 